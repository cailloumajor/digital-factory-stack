version: "3"

name: digital-factory-stack

services:

  centrifugo:
    image: centrifugo/centrifugo:v5.1.0
    command:
      - centrifugo
      - --config
      - /usr/local/etc/centrifugo.toml
    environment:
      # Following environment variables will be taken from env file
      - CENTRIFUGO_ALLOWED_ORIGINS
      - CENTRIFUGO_API_KEY
      - CENTRIFUGO_TOKEN_HMAC_SECRET_KEY
    healthcheck:
      test: wget --spider http://127.0.0.1:8000/health || exit 1
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped
    user: nobody:${STACK_GID}
    volumes:
      - ./centrifugo.toml:/usr/local/etc/centrifugo.toml:ro

  grafana:
    image: grafana/grafana-oss:10.4.11
    environment:
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Public
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SERVER_ENABLE_GZIP=true
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - INFLUXDB_URL=http://influxdb:8086
      # Following environment variables will be taken from env file
      - GF_SERVER_DOMAIN
      - INFLUXDB_API_TOKEN=${INFLUXDB_GRAFANA_TOKEN}
      - INFLUXDB_BUCKET
      - INFLUXDB_ORG
    group_add:
      - ${STACK_GID}
    healthcheck:
      test: curl -f localhost:3000/api/health || exit 1
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped
    volumes:
      - ${GRAFANA_DATA_HOST_PATH}:/var/lib/grafana
      - ./grafana-influxdb-source.yaml:/etc/grafana/provisioning/datasources/influxdb.yaml

  influxdb:
    image: influxdb:2.7.3
    environment:
      - INFLUXD_REPORTING_DISABLED=true
    healthcheck:
      test: influx ping -c default || exit 1
      interval: 20s
      start_period: 1m
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped
    volumes:
      - ${INFLUXDB_DATA_HOST_PATH}:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2

  log-viewer:
    image: amir20/dozzle:v5.0.8
    depends_on:
      - docker-proxy-log-viewer
    environment:
      - DOCKER_HOST=tcp://docker-proxy-log-viewer:2375
      - DOZZLE_BASE=/logs
      - DOZZLE_FILTER=label=dozzle.enable=true
      - DOZZLE_NO_ANALYTICS=true
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
    networks:
      - docker-api-log-viewer
      - reverse-proxy
    restart: unless-stopped
    # Image does not contain `/etc/passwd`, so use numeric UID & GID
    user: 65534:65534

  mongodb:
    image: mongo:7.0.2
    command: --replSet=dummy
    healthcheck:
      test: "mongosh --quiet --norc --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 1)'"
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped
    ulimits:
      nofile: 64000
      nproc: 64000
    volumes:
      - ${MONGODB_DATA_HOST_PATH}:/data/db
      - ./initialize-replica-set.mongodb:/usr/local/share/initialize-replica-set.mongodb:ro

  # opentelemetry-collector:
  #   image: otel/opentelemetry-collector-contrib:0.75.0
  #   command:
  #     - --config
  #     - /usr/local/etc/otelcol.yaml
  #   environment:
  #     # Following environment variables will be taken from env file
  #     - GRAFANA_OTLP_ENDPOINT
  #     - GRAFANA_OTLP_PASS
  #     - GRAFANA_OTLP_USER
  #     - HTTP_PROXY
  #     - HTTPS_PROXY
  #     - NO_PROXY
  #   group_add:
  #     - ${STACK_GID}
  #   labels:
  #     dozzle.enable: true
  #   networks:
  #     - telemetry
  #   restart: unless-stopped
  #   volumes:
  #     - ./otelcol.yaml:/usr/local/etc/otelcol.yaml

  webserver:
    image: caddy:2.7.5
    environment:
      # Following environment variables will be taken from env file
      - SITE_ADDRESS
      - SITE_ADDRESS_LEGACY
    labels:
      dozzle.enable: true
    networks:
      - reverse-proxy
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - caddy-config:/config
      - caddy-data:/data
      - factory-frontend-static:/srv/www:ro
      - frontend-legacy-static:/srv/www-legacy:ro
      - ./Caddyfile:/etc/caddy/Caddyfile:ro

  centrifugo-change-stream:
    image: ghcr.io/cailloumajor/centrifugo-change-stream:4.0.12
    environment:
      - MONGODB_DATABASE=opcua
      - MONGODB_COLLECTION=data
      # Following environment variables will be taken from env file
      - CENTRIFUGO_API_KEY
      - MONGODB_URI
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped

  config-api:
    image: ghcr.io/cailloumajor/config-api:2.4.2
    environment:
      - MONGODB_DATABASE=services_config
      # Following environment variables will be taken from env file
      - MONGODB_URI
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped

  docker-proxy-log-viewer:
    image: ghcr.io/cailloumajor/docker-socket-proxy:1.0.11
    environment:
      - CONFIG_FILE=/usr/local/etc/docker-socket-proxy.toml
    group_add:
      - ${DOCKER_SOCKET_GID}
      - ${STACK_GID}
    labels:
      dozzle.enable: true
    networks:
      - docker-api-log-viewer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker-proxy-log-viewer.toml:/usr/local/etc/docker-socket-proxy.toml:ro

  factory-frontend:
    image: ghcr.io/cailloumajor/factory-frontend:2.4.3
    labels:
      dozzle.enable: true
    restart: unless-stopped
    volumes:
      - factory-frontend-static:/srv/www

  influxdb-compute-api:
    image: ghcr.io/cailloumajor/influxdb-compute-api:2.4.3
    environment:
      - CONFIG_API_URL=http://config-api:8080/config/line_dashboard/
      - INFLUXDB_MEASUREMENT=opcua.data
      # Following environment variables will be taken from env file
      - INFLUXDB_API_TOKEN=${INFLUXDB_COMPUTE_TOKEN}
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped

  mongodb-influxdb:
    image: ghcr.io/cailloumajor/mongodb-influxdb:3.0.14
    environment:
      - MONGODB_DATABASE=opcua
      - MONGODB_COLLECTION=data
      # Following environment variables will be taken from env file
      - MONGODB_URI
      - INFLUXDB_API_TOKEN=${INFLUXDB_SCRAPER_TOKEN}
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped

  opcua-proxy:
    image: ghcr.io/cailloumajor/opcua-proxy:6.0.1
    environment:
      - MONGODB_DATABASE=opcua
      - CONFIG_API_URL=http://config-api:8080/config/opcua
      - PKI_DIR=/pki
      # Following environment variables will be taken from env file
      - MONGODB_URI
    group_add:
      - ${STACK_GID}
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped
    volumes:
      - ./pki:/pki

  # Legacy Centrifugo
  centrifugo-legacy:
    image: centrifugo/centrifugo:v3.0.5
    command:
      - centrifugo
      - --config
      - /usr/local/etc/centrifugo.toml
    environment:
      # Following environment variables will be taken from env file
      - CENTRIFUGO_ALLOWED_ORIGINS=${CENTRIFUGO_LEGACY_ALLOWED_ORIGINS}
      - CENTRIFUGO_API_KEY
    healthcheck:
      test: wget --spider http://127.0.0.1:8000/health || exit 1
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped
    user: nobody:${STACK_GID}
    volumes:
      - ./centrifugo-legacy.toml:/usr/local/etc/centrifugo.toml:ro

  # Legacy OPC-UA client service
  opcua-bridge-legacy:
    image: ghcr.io/cailloumajor/opcua-webhmi-bridge:1.0.6
    environment:
      - INFLUXDB_BASE_URL=http://influxdb:8086
      - CENTRIFUGO_API_URL=http://centrifugo-legacy:8000/api
      # Following environment variables will be obtained from `.env` file
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET_LEGACY}
      - INFLUXDB_WRITE_TOKEN=${INFLUXDB_OPCUA_BRIDGE_LEGACY_TOKEN}
      - CENTRIFUGO_API_KEY
      - OPC_SERVER_URL=${OPC_SERVER_URL_LEGACY}
      - OPC_MONITOR_NODES=${OPC_MONITOR_NODES_LEGACY}
      - OPC_RECORD_NODES=${OPC_RECORD_NODES_LEGACY}
    group_add:
      - ${STACK_GID}
    labels:
      dozzle.enable: "true"
    networks:
      - private
    restart: unless-stopped
    volumes:
      - ./pki/legacy/cert.der:/tmp/certs/cert.der
      - ./pki/legacy/key.pem:/tmp/certs/key.pem

  # Legacy API service
  api-service-legacy:
    image: ghcr.io/cailloumajor/line-supervision-api-service:1.3.12
    environment:
      - TZ=Europe/Paris
      - UI_CUSTOMIZATION_FILE=/app/config_data/customization.toml
      - LOGO_FILE=/app/config_data/logo.png
      - INFLUXDB_BASE_URL=http://influxdb:8086
      # Following environment variables will be obtained from `.env` file
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET_LEGACY}
      - INFLUXDB_READ_TOKEN=${INFLUXDB_API_SERVICE_LEGACY_TOKEN}
    group_add:
      - ${STACK_GID}
    labels:
      dozzle.enable: "true"
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped
    volumes:
      - ./ui-customization.toml:/app/config_data/customization.toml:ro
      - ./logo.png:/app/config_data/logo.png:ro

  # Legacy line supervision frontend
  line-supervision-frontend-legacy:
    image: ghcr.io/cailloumajor/line-supervision-frontend:0.1.0
    labels:
      dozzle.enable: true
    restart: unless-stopped
    volumes:
      - frontend-legacy-static:/srv/www

networks:
  docker-api-log-viewer:
  telemetry:
  private:
  reverse-proxy:

volumes:
  caddy-config:
  caddy-data:
  factory-frontend-static:
  influxdb-config:
  frontend-legacy-static:
