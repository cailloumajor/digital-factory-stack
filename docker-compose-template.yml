version: "3"

name: digital-factory-stack

services:

  centrifugo:
    image: centrifugo/centrifugo:v4.1.2
    command:
      - centrifugo
      - --config
      - /usr/local/etc/centrifugo.toml
    environment:
      # Following environment variables will be taken from env file
      - CENTRIFUGO_ALLOWED_ORIGINS
      - CENTRIFUGO_API_KEY
      - CENTRIFUGO_TOKEN_HMAC_SECRET_KEY
    expose:
      - 8000
    healthcheck:
      test: wget --spider http://127.0.0.1:8000/health || exit 1
    labels:
      dozzle.enable: true
    networks:
      management:
        ipv4_address: 192.168.254.2
      private:
      reverse-proxy:
    restart: unless-stopped
    user: nobody:${STACK_GID}
    volumes:
      - ./centrifugo.toml:/usr/local/etc/centrifugo.toml:ro

  influxdb:
    image: influxdb:2.6.1
    environment:
      - INFLUXD_REPORTING_DISABLED=true
    healthcheck:
      test: influx ping -c default || exit 1
      interval: 20s
      start_period: 1m
    labels:
      dozzle.enable: true
    networks:
      private:
      reverse-proxy:
      management:
        ipv4_address: 192.168.254.3
    restart: unless-stopped
    volumes:
      - ${INFLUXDB_DATA_HOST_PATH}:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2

  log-viewer:
    image: amir20/dozzle:v4.9.1
    depends_on:
      - docker-proxy-log-viewer
    environment:
      - DOCKER_HOST=tcp://docker-proxy-log-viewer:2375
      - DOZZLE_BASE=/logs
      - DOZZLE_FILTER=label=dozzle.enable=true
      - DOZZLE_NO_ANALYTICS=true
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
    networks:
      - docker-api-log-viewer
      - reverse-proxy
    restart: unless-stopped
    # Image does not contain `/etc/passwd`, so use numeric UID & GID
    user: 65534:65534

  mongodb:
    image: mongo:6.0.5
    command: --replSet=dummy
    healthcheck:
      test: "mongosh --quiet --norc --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 1)'"
    labels:
      dozzle.enable: true
    networks:
      private:
      management:
        ipv4_address: 192.168.254.4
    restart: unless-stopped
    ulimits:
      nofile: 64000
      nproc: 64000
    volumes:
      - ${MONGODB_DATA_HOST_PATH}:/data/db
      - ./initialize-replica-set.mongodb:/usr/local/share/initialize-replica-set.mongodb:ro

  # opentelemetry-collector:
  #   image: otel/opentelemetry-collector-contrib:0.75.0
  #   command:
  #     - --config
  #     - /usr/local/etc/otelcol.yaml
  #   environment:
  #     # Following environment variables will be taken from env file
  #     - GRAFANA_OTLP_ENDPOINT
  #     - GRAFANA_OTLP_PASS
  #     - GRAFANA_OTLP_USER
  #     - HTTP_PROXY
  #     - HTTPS_PROXY
  #     - NO_PROXY
  #   group_add:
  #     - ${STACK_GID}
  #   labels:
  #     dozzle.enable: true
  #   networks:
  #     - telemetry
  #   restart: unless-stopped
  #   volumes:
  #     - ./otelcol.yaml:/usr/local/etc/otelcol.yaml

  webserver:
    image: caddy:2.6.4
    environment:
      # Following environment variables will be taken from env file
      - SITE_ADDRESS
    labels:
      dozzle.enable: true
    networks:
      - reverse-proxy
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - caddy-config:/config
      - caddy-data:/data
      - factory-frontend-static:/srv/www:ro
      - ./Caddyfile:/etc/caddy/Caddyfile:ro

  centrifugo-change-stream:
    image: ghcr.io/cailloumajor/centrifugo-change-stream:3.1.4
    environment:
      - MONGODB_DATABASE=opcua
      - MONGODB_COLLECTION=data
      # Following environment variables will be taken from env file
      - CENTRIFUGO_API_KEY
      - MONGODB_URI
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped

  config-api:
    image: ghcr.io/cailloumajor/config-api:2.1.2
    environment:
      - MONGODB_DATABASE=services_config
      # Following environment variables will be taken from env file
      - MONGODB_URI
    labels:
      dozzle.enable: true
    networks:
      - private
      - reverse-proxy
    restart: unless-stopped

  docker-proxy-log-viewer:
    image: ghcr.io/cailloumajor/docker-socket-proxy:1.0.1
    environment:
      - CONFIG_FILE=/usr/local/etc/docker-socket-proxy.toml
    group_add:
      - ${DOCKER_SOCKET_GID}
      - ${STACK_GID}
    labels:
      dozzle.enable: true
    networks:
      - docker-api-log-viewer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker-proxy-log-viewer.toml:/usr/local/etc/docker-socket-proxy.toml:ro

  factory-frontend:
    image: ghcr.io/cailloumajor/factory-frontend:1.8.1
    labels:
      dozzle.enable: true
    restart: unless-stopped
    volumes:
      - factory-frontend-static:/srv/www

  mongodb-scraper:
    image: ghcr.io/cailloumajor/mongodb-scraper:2.2.0
    environment:
      - MONGODB_DATABASE=opcua
      - MONGODB_COLLECTION=data
      # Following environment variables will be taken from env file
      - MONGODB_URI
      - INFLUXDB_API_TOKEN=${INFLUXDB_SCRAPER_TOKEN}
      - INFLUXDB_ORG
      - INFLUXDB_BUCKET
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped

  # {{ range $key, $value := .stackConfig.opcua_proxy }}
  opcua-proxy-{{ $key }}:
    image: ghcr.io/cailloumajor/opcua-proxy:4.6.0
    environment:
      - PARTNER_ID={{ $key }}
      - CONFIG_API_URL=http://config-api:8080/config/opcua/
      - PKI_DIR=/pki
      - OPCUA_SERVER_URL={{ $value.server_url }}
      # Following environment variables will be taken from env file
      - MONGODB_URI
    group_add:
      - ${STACK_GID}
    labels:
      dozzle.enable: true
    networks:
      - private
    restart: unless-stopped
    volumes:
      - ./opcua-proxy/pki:/pki
  # {{ end }}

networks:
  docker-api-log-viewer:
  management:
    internal: true
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
    ipam:
      config:
        - subnet: 192.168.254.0/24
          gateway: 192.168.254.254
  telemetry:
  private:
  reverse-proxy:

volumes:
  caddy-config:
  caddy-data:
  factory-frontend-static:
  influxdb-config:
